# WARNING: THIS IS AUTO-GENERATED FROM config.template.yml AND build-system/cci_gen! DO NOT MODIFY DIRECTLY!
#
# This file uses YAML anchors and aliases to prevent repetition of blocks of config:
# https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/
#
# Two primary anchors are checkout and setup_env, called as the first step of almost all jobs:
# - checkout: A custom checkout step to reduce the amount of data downloaded to improve speed.
# - setup_env: Sets up the common environment used by all build steps.
#
# Two CCI executors are used:
# - docker (small): Used only to launch external EC2 instances for big workloads. It's the cheapest option.
# - machine (large): Used for building in CCI itself. 4cpus, 15GB has the optimal power/cost ratio.
#
# The docker executor uses a custom image build in `build_image`. It's specifically streamlined for fast download
# with just enough tools to execute the build system, and launch EC2 instances etc.
#
# There are some `join` steps that are just noops. They are just used to produce cleaner graph rendering in CCI.

version: 2.1

orbs:
  slack: circleci/slack@4.12.1

parameters:
  workflow:
    type: string
    default: "system"

# This build step checks out the code from the repository. It has a hardcoded readonly key to allow the checkout.
# Initially it just fetches the repo metadata for the current commit hash to a depth of 50 commits.
# We need historical commit hashes to calculate diffs between previous and current commits.
# It then checks out the fetched head to actually download the data.
checkout: &checkout
  run:
    name: "Checkout code"
    command: |
      function retry() {
        # Retries up to 3 times with 10 second intervals
        for i in $(seq 1 3); do
          "$@" && return || sleep 10
        done
        echo "$@ failed after 3 attempts"
        exit 1
      }
      cd $HOME
      mkdir -p .ssh
      chmod 0700 .ssh
      retry ssh-keyscan -t rsa github.com >> .ssh/known_hosts

      # A read only key for cloning the repository.
      echo $GIT_CHECKOUT_KEY | base64 -d > .ssh/id_rsa

      chmod 0600 .ssh/id_rsa
      # IF YOU'RE CHANGING THIS, YOU ALSO WANT TO CHANGE: build-system/scripts/remote_runner
      # Shallow checkout this commit.
      mkdir -p project
      cd project
      git init
      git remote add origin $CIRCLE_REPOSITORY_URL

      # Only download metadata when fetching.
      retry git fetch --depth 1 --filter=blob:none origin $CIRCLE_SHA1
      retry git checkout FETCH_HEAD

# Called setup_env to setup a bunch of global variables used throughout the rest of the build process.
# It takes the required CCI environment variables as inputs, and gives them normalised names for the rest of
# the build process. This enables easy running of the build system external to CCI, as used for powerful EC2 builds.
setup_env: &setup_env
  run:
    name: "Setup environment"
    command: ./build-system/scripts/setup_env "$CIRCLE_SHA1" "$CIRCLE_TAG" "$CIRCLE_JOB" "$CIRCLE_REPOSITORY_URL" "$CIRCLE_BRANCH"

# This step is used to save logs from various barretenberg test to the workspace so that they can be used later to parse benchmark values out of them
save_logs: &save_logs
  persist_to_workspace:
    root: /tmp/test-logs
    paths:
      - ./*

# No need to add jobs here! Use the generator to update:
#  $ (cd build-system/cci_gen && yarn && yarn start)
jobs:
  barretenberg-wasm-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-wasm-linux-clang 64 | add_timestamps

  barretenberg-x86_64-linux-gcc:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-x86_64-linux-gcc 64 | add_timestamps

  barretenberg-x86_64-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-x86_64-linux-clang 64 | add_timestamps

  barretenberg-x86_64-linux-clang-fuzzing:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-fuzzing 64 | add_timestamps

  barretenberg-x86_64-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-x86_64-linux-clang-assert 64 | add_timestamps

  barretenberg-stdlib-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 stdlib-tests | add_timestamps

  barretenberg-dsl-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 dsl_tests | add_timestamps

  barretenberg-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/bb-tests.sh | add_timestamps

  barretenberg-honk-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 honk_tests | add_timestamps

  barretenberg-proof-system-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 proof_system_tests | add_timestamps

  barretenberg-stdlib-recursion-turbo-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 stdlib_recursion_tests --gtest_filter=*turbo* | add_timestamps

  barretenberg-stdlib-recursion-ultra-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 stdlib_recursion_tests --gtest_filter=-*turbo* | add_timestamps

  barretenberg-join-split-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test barretenberg-x86_64-linux-clang-assert 32 ./scripts/run_tests 3 join_split_example_proofs_join_split_tests --gtest_filter=-*full_proof* | add_timestamps

  barretenberg-acir-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build barretenberg-acir-tests 32 | add_timestamps

  bb-js:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build bb-js | add_timestamps

  bb-js-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test bb-js 32 ./scripts/run_tests | add_timestamps

  bb-js-acir-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build bb-js-acir-tests 32 | add_timestamps

  circuits-wasm-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build circuits-wasm-linux-clang 32 | add_timestamps

  circuits-wasm-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build circuits-wasm-linux-clang-assert 32 | add_timestamps

  circuits-wasm-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test circuits-wasm-linux-clang-assert 32 ./scripts/run_tests 1 wasm scripts/a3-tests -*.skip*:*.circuit* | add_timestamps

  circuits-x86_64-linux-clang-tidy:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build circuits-x86_64-linux-clang-tidy 32 | add_timestamps

  circuits-x86_64-linux-clang:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build circuits-x86_64-linux-clang 32 | add_timestamps

  circuits-x86_64-linux-clang-assert:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build circuits-x86_64-linux-clang-assert 32 | add_timestamps

  circuits-x86_64-tests:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_spot_run_test circuits-x86_64-linux-clang-assert 32 ./scripts/run_tests 1 x86_64 scripts/a3-tests -*.skip* | add_timestamps

  docs:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build docs | add_timestamps

  l1-contracts:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build l1-contracts | add_timestamps

  noir-contracts-build:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build noir-contracts-build | add_timestamps

  yarn-project-base:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build yarn-project-base | add_timestamps

  yarn-project:
    docker:
      - image: aztecprotocol/alpine-build-image
    resource_class: small
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: cond_spot_run_build yarn-project 64 | add_timestamps

  aztec-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build aztec-sandbox | add_timestamps

  end-to-end:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Build
          command: build end-to-end | add_timestamps

  e2e-2-rpc-servers:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_2_rpc_servers.test.ts | add_timestamps

  e2e-multiple-accounts-1-enc-key:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_multiple_accounts_1_enc_key.test.ts | add_timestamps

  e2e-deploy-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_deploy_contract.test.ts | add_timestamps

  e2e-lending-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_lending_contract.test.ts | add_timestamps

  e2e-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_token_contract.test.ts | add_timestamps

  e2e-private-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_private_token_contract.test.ts | add_timestamps

  e2e-multi-transfer-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_multi_transfer.test.ts | add_timestamps

  e2e-block-building:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_block_building.test.ts | add_timestamps

  e2e-nested-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_nested_contract.test.ts | add_timestamps

  e2e-non-contract-account:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_non_contract_account.test.ts | add_timestamps

  e2e-cross-chain-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_cross_chain_messaging.test.ts | add_timestamps

  e2e-public-cross-chain-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_cross_chain_messaging.test.ts | add_timestamps

  e2e-public-to-private-messaging:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_to_private_messaging.test.ts | add_timestamps

  e2e-account-contracts:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_account_contracts.test.ts | add_timestamps

  e2e-escrow-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_escrow_contract.test.ts | add_timestamps

  e2e-pending-commitments-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_pending_commitments_contract.test.ts | add_timestamps

  e2e-ordering:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_ordering.test.ts | add_timestamps

  uniswap-trade-on-l1-from-l2:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local uniswap_trade_on_l1_from_l2.test.ts | add_timestamps

  integration-archiver-l1-to-l2:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local integration_archiver_l1_to_l2.test.ts | add_timestamps

  integration-l1-publisher:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local integration_l1_publisher.test.ts | add_timestamps

  e2e-public-token-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_public_token_contract.test.ts | add_timestamps

  e2e-cli:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_cli.test.ts | add_timestamps

  e2e-p2p:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_p2p_network.test.ts | add_timestamps

  e2e-card-game:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_card_game.test.ts | add_timestamps

  e2e-sandbox-example:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_sandbox_example.test.ts ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

  e2e-browser-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local e2e_aztec_js_browser.test.ts ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

  aztec-rpc-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local aztec_rpc_sandbox.test.ts ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

  cli-docs-sandbox:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local cli_docs_sandbox.test.ts ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

  guides-writing-an-account-contract:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local guides/writing_an_account_contract.test.ts | add_timestamps

  guides-dapp-testing:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local guides/dapp_testing.test.ts ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

  guides-sample-dapp:
    machine:
      image: ubuntu-2204:2023.07.2
    resource_class: large
    steps:
      - *checkout
      - *setup_env
      - run:
          name: Test
          command: cond_run_script end-to-end ./scripts/run_tests_local sample-dapp ./scripts/docker-compose-e2e-sandbox.yml | add_timestamps

# Repeatable config for defining the workflow below.
tag_regex: &tag_regex /^aztec-packages-v.*/

defaults: &defaults
  filters:
    tags:
      only: *tag_regex
  context:
    - build
    - slack
  post-steps:
    - slack/notify:
        event: fail
        branch_pattern: "master"

# deploy_defaults: &deploy_defaults
#   filters:
#     tags:
#       only: *tag_regex
#     branches:
#       ignore: /.*/
#   context:
#     - build
#     - slack
#   post-steps:
#     - slack/notify:
#         event: fail
#         branch_pattern: "master"

# yarn_project: &yarn_project
#   requires:
#     - yarn-project-base
#   <<: *defaults

# e2e_test: &e2e_test
#   requires:
#     - e2e-join
#   <<: *defaults

# bb_test: &bb_test
#   requires:
#     - barretenberg-x86_64-linux-clang-assert
#   <<: *defaults

# Workflows.
workflows:
  system:
    when:
      equal: [ system, << pipeline.parameters.workflow >> ]
    jobs:
      - barretenberg-wasm-linux-clang:
          <<: *defaults
      - barretenberg-x86_64-linux-gcc:
          <<: *defaults
      - barretenberg-x86_64-linux-clang:
          <<: *defaults
      - barretenberg-x86_64-linux-clang-fuzzing:
          <<: *defaults
      - barretenberg-x86_64-linux-clang-assert:
          <<: *defaults
      - barretenberg-stdlib-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-dsl-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-honk-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-proof-system-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-stdlib-recursion-turbo-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-stdlib-recursion-ultra-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-join-split-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - barretenberg-acir-tests:
          requires:
            - barretenberg-x86_64-linux-clang-assert
          <<: *defaults
      - bb-js:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - bb-js-tests:
          requires:
            - bb-js
          <<: *defaults
      - bb-js-acir-tests:
          requires:
            - bb-js
          <<: *defaults
      - circuits-wasm-linux-clang:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - circuits-wasm-linux-clang-assert:
          requires:
            - barretenberg-wasm-linux-clang
          <<: *defaults
      - circuits-wasm-tests:
          requires:
            - circuits-wasm-linux-clang-assert
          <<: *defaults
      - circuits-x86_64-linux-clang-tidy:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-x86_64-linux-clang:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-x86_64-linux-clang-assert:
          requires:
            - barretenberg-x86_64-linux-clang
          <<: *defaults
      - circuits-x86_64-tests:
          requires:
            - circuits-x86_64-linux-clang-assert
          <<: *defaults
      - docs:
          <<: *defaults
      - l1-contracts:
          <<: *defaults
      - noir-contracts-build:
          requires: []
          <<: *defaults
      - yarn-project-base:
          requires:
            - circuits-wasm-linux-clang
            - l1-contracts
          <<: *defaults
      - yarn-project:
          requires:
            - yarn-project-base
            - noir-contracts-build
          <<: *defaults
      - aztec-sandbox:
          requires:
            - yarn-project
          <<: *defaults
      - end-to-end:
          requires:
            - yarn-project
          <<: *defaults
      - e2e-2-rpc-servers:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-multiple-accounts-1-enc-key:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-deploy-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-lending-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-token-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-private-token-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-multi-transfer-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-block-building:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-nested-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-non-contract-account:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-cross-chain-messaging:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-public-cross-chain-messaging:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-public-to-private-messaging:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-account-contracts:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-escrow-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-pending-commitments-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-ordering:
          requires:
            - end-to-end
          <<: *defaults
      - uniswap-trade-on-l1-from-l2:
          requires:
            - end-to-end
          <<: *defaults
      - integration-archiver-l1-to-l2:
          requires:
            - end-to-end
          <<: *defaults
      - integration-l1-publisher:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-public-token-contract:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-cli:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-p2p:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-card-game:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-sandbox-example:
          requires:
            - end-to-end
          <<: *defaults
      - e2e-browser-sandbox:
          requires:
            - end-to-end
          <<: *defaults
      - aztec-rpc-sandbox:
          requires:
            - end-to-end
          <<: *defaults
      - cli-docs-sandbox:
          requires:
            - end-to-end
          <<: *defaults
      - guides-writing-an-account-contract:
          requires:
            - end-to-end
          <<: *defaults
      - guides-dapp-testing:
          requires:
            - end-to-end
          <<: *defaults
      - guides-sample-dapp:
          requires:
            - end-to-end
          <<: *defaults
